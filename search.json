[{"path":"https://mshilts1.github.io/biostoreCapacity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 biostoreCapacity authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Meghan Shilts. Author, maintainer.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shilts M (2025). biostoreCapacity: Estimate BioStore II Capacity Reached. R package version 0.0.0.9000, https://mshilts1.github.io/biostoreCapacity/.","code":"@Manual{,   title = {biostoreCapacity: Estimate when BioStore II Capacity will be Reached},   author = {Meghan Shilts},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://mshilts1.github.io/biostoreCapacity/}, }"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"biostorecapacity","dir":"","previous_headings":"","what":"Estimate when BioStore II Capacity will be Reached","title":"Estimate when BioStore II Capacity will be Reached","text":"goal biostoreCapacity attempt predict VUMC’s institutional resource BioStore II freezer full unable store additional ECHO biospecimens. estimate , data model try include: Historical data rate freezer filling ECHO. $\\color{green}{\\text{✓}}$ Current future biospecimen kit builds. $\\color{green}{\\text{✓}}$ Expected number biospecimens collected time. $\\color{red}{\\text{✘}}$ ($\\color{green}{\\text{✓}}$) means data. ($\\color{red}{\\text{✘}}$) means LAB CORE missing () specific information, exist!.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"what-is-the-total-biostore-ii-capacity","dir":"","previous_headings":"","what":"What is the total BioStore II capacity?","title":"Estimate when BioStore II Capacity will be Reached","text":"simplest equation calculating BioStore capacity : (196,412+x)788,256+(212,692+y)438,840=1\\frac{(196,412 + x)}{788,256} + \\frac{(212,692 + y)}{438,840} = 1 : * 196,412196,412 number ECHO 1.0 ml tubes already stored (pending) BioStore (2025-09-02). * xx number 1.0 ml tubes still collected ECHO. * 212,692212,692 number ECHO 1.9 ml tubes already stored (pending) BioStore (2025-09-02). * yy number 1.9 ml tubes still collected ECHO. * 788,256788,256 absolute maximum number 1.0 ml tubes can stored BioStore (assuming 0 1.9 ml tubes). * 438,840438,840 absolute maximum number 1.0 ml tubes can stored BioStore (assuming 0 1.9 ml tubes). xx yy can increase, one increases capacity decreases. total capacity exceed 1, 100%.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"what-should-go-into-the-forecast-model-of-when-the-biostore-will-be-at-capacity","dir":"","previous_headings":"","what":"What should go into the forecast model of when the BioStore will be at capacity?","title":"Estimate when BioStore II Capacity will be Reached","text":"can estimate xx yy , capacity BioStore full? data think need predict BioStore full: Historical data (time series data number ECHO tubes added BioStore time). $\\color{green}{\\text{✓}}$ Expected number kits time needs include ability handle complexities introduced due “specialized” kits, collected sites. $\\color{yellow}{\\text{◎}}$ Number tubes current kit builds per kit type. $\\color{green}{\\text{✓}}$ Proportion tubes kit type expected sent back biorepository. (e.g., may get tiny bit urine young babies, may receive three 1.9ml tubes storage). $\\color{yellow}{\\text{◎}}$","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"general-proposed-model-structure","dir":"","previous_headings":"What should go into the forecast model of when the BioStore will be at capacity?","what":"General proposed model structure","title":"Estimate when BioStore II Capacity will be Reached","text":"’s idea kind formula ’m thinking , FFFF “Freezer Filling”: First, can attempt make model using historical data ECHO submissions BioStore: FFt+1=f(FFt+FFt−1+FFt−2+⋯+error)FF_{t+1} = f(FF_{t} + FF_{t-1} + FF_{t-2} + \\cdots + error) Second, know changes ECHO protocol mean historical rate data can’t relied alone, need consider predictor variables: FFpv=f(enrollment,collection,tubes,loss,error)FF_{pv} = f(enrollment, collection, tubes, loss, error) :enrollmentenrollment expected number participants specimens collected . DATA.collectioncollection biospecimen collection schedule time.tubestubes number tubes per biospecimen collection kit.lossloss sort drop-rate; participant drop-, tubes kit returned biorepository, etc. final model something mixing two models: FFmixed=f(FFt+1,FFpv,error)FF_{mixed} = f(FF_{t+1},FF_{pv, error}) errorerror models isn’t mean indicate error colloquial sense, allow random variation effects variables captured model.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Estimate when BioStore II Capacity will be Reached","text":"can install development version biostoreCapacity GitHub : Eventually, ’m going attempt put Shiny ’s easy anyone use, still keep source code transparent GitHub.","code":"# install.packages(\"pak\") pak::pak(\"mshilts1/biostoreCapacity\") library(biostoreCapacity) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo"},{"path":[]},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"historical-data","dir":"","previous_headings":"Load in data above that we do have","what":"Historical data","title":"Estimate when BioStore II Capacity will be Reached","text":"","code":"historical_data <- readHistorical() historical_data_long <- longifyReadHistorical() # same thing as above, but in \"long\" format for easier plotting historical_data_long_proportions <- longifyReadHistorical(total_or_prop = \"prop\") # same as directly above, but proportions of freezer capacity instead of raw numbers"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"plot-rate-of-accessioning-over-time","dir":"","previous_headings":"Load in data above that we do have > Historical data","what":"Plot rate of accessioning over time:","title":"Estimate when BioStore II Capacity will be Reached","text":"","code":"library(ggplot2) ggplot(historical_data_long, aes(x = date, y = total, colour = tube_type)) +   geom_point() +   geom_smooth() +   theme_bw() +   ylab(\"Cumulative Tubes Submitted to BioStore\") +   xlab(\"\") +   scale_x_date(date_breaks = \"2 month\", date_labels = \"%b %y\") #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"plot-overall-proportion-of-biostore-filled-over-time","dir":"","previous_headings":"Load in data above that we do have > Historical data","what":"Plot overall proportion of BioStore filled over time:","title":"Estimate when BioStore II Capacity will be Reached","text":"includes “pending” tubes, tubes still sites shipped eventually counted towards BioStore’s total inventory.","code":"ggplot(longifyReadHistorical(total_or_prop = \"prop\", add_pending = TRUE), aes(x = date, y = total, colour = tube_type)) +   geom_point() +   geom_smooth() +   theme_bw() +   ylab(\"Cumulative Proportion of BioStore Capacity Filled\") +   xlab(\"\") +   scale_x_date(date_breaks = \"2 month\", date_labels = \"%b %y\") +    geom_hline(yintercept = 1) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"eric-koplins-arima-model","dir":"","previous_headings":"Load in data above that we do have","what":"Eric Koplin’s ARIMA model","title":"Estimate when BioStore II Capacity will be Reached","text":"Eric Koplin built ARIMA model using forecast package predict BioStore full based historical rate filling:","code":"single_arima()"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"site-collection-info-pushed-to-elvislims-from-bio-track","dir":"","previous_headings":"Load in data above that we do have","what":"Site collection info pushed to elvislims from Bio-Track","title":"Estimate when BioStore II Capacity will be Reached","text":"Just created function testing ’s working","code":"site_collections() #> # A tibble: 204,017 × 16 #>    site_id_randomized               number_of_containers container_type capacity #>    <chr>                                           <int> <chr>             <int> #>  1 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  2 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  3 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  4 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  5 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  6 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  7 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  8 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  9 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #> 10 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #> # ℹ 204,007 more rows #> # ℹ 12 more variables: number_of_specimen <int>, specimen_type <chr>, #> #   sample_type <chr>, storage_date <chr>, nominal_volume <chr>, #> #   partial_aliquot <lgl>, partial_volume <dbl>, tube_size <chr>, #> #   specialized_whole_blood <int>, specialized_breast_milk <int>, #> #   specialized_urine <int>, shipped <int>"},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"future-kit-builds-and-biospecimen-collection-protocol","dir":"","previous_headings":"","what":"Future kit builds and biospecimen collection protocol","title":"Estimate when BioStore II Capacity will be Reached","text":"can’t really use information yet, clear estimate number participants. Information readCollections() can assumed “true” constant sake building model: collection_id, kit_type, biospecimen_type, participant, tube_size, tubes_per_kit. visit, specimen_type, y_2025, y_2026, y_2027, y_2028, y_2029, y_2030, specialized_obesity, specialized_chemphys, specialized_lifestyle. Speculative columns contain word “proportion” name:","code":"biospecimen_collections <- readCollections() biospecimen_collections #> # A tibble: 27 × 29 #>    collection_id   kit_type biospecimen_type participant tube_size tubes_per_kit #>    <chr>           <chr>    <chr>            <chr>       <chr>             <dbl> #>  1 breastmilk_1.9… breastm… breastmilk       maternal    1.9ml                 8 #>  2 breastmilk_1ml… breastm… breastmilk       maternal    1ml                  10 #>  3 cord_blood_1.9… cord_bl… cord_blood       child       1.9ml                 6 #>  4 cord_blood_1ml… cord_bl… cord_blood       child       1ml                  10 #>  5 placenta_1.9ml… placenta placenta         maternal    1.9ml                16 #>  6 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #>  7 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #>  8 urine_diaper_1… urine_d… urine            child       1.9ml                 3 #>  9 urine_cup_curr… urine_c… urine            partner     1.9ml                 3 #> 10 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #> # ℹ 17 more rows #> # ℹ 23 more variables: proportion_from_kit_collected <dbl>, visit <chr>, #> #   visit_logical_order <dbl>, specimen_type <chr>, y_2025 <dbl>, y_2026 <dbl>, #> #   y_2027 <dbl>, y_2028 <dbl>, y_2029 <dbl>, y_2030 <dbl>, #> #   y_2025_proportion <dbl>, y_2026_proportion <dbl>, y_2027_proportion <dbl>, #> #   y_2028_proportion <dbl>, y_2029_proportion <dbl>, y_2030_proportion <dbl>, #> #   specialized_obesity <chr>, specialized_obesity_proportion <chr>, … * `proportion_from_kit_collected`, `y_2025_proportion`, `y_2026_proportion`, `y_2027_proportion`, `y_2028_proportion`, `y_2029_proportion`, `y_2030_proportion`, `specialized_obesity_proportion`, `specialized_chemphys_proportion`, `specialized_lifestyle_proportion`."},{"path":"https://mshilts1.github.io/biostoreCapacity/index.html","id":"only-read-below-if-you-want-more-details","dir":"","previous_headings":"","what":"Only read below if you want more details","title":"Estimate when BioStore II Capacity will be Reached","text":"thorough description every column readCollections(): collection_id: unique ID. concatenation kit_type, tube_size, visit, specimen_type. kit_type: concatenation biospecimen_type participant. biospecimen_type: type biospecimen collected (e.g., urine blood, etc…). participant: specimen collected ECHO child, child’s mother, child’s mother’s current partner. tube_size: whether tube 1.0mL 1.9mL (1.9mL tubes take space BioStore.). tubes_per_kit: number tubes specified size specific kit. proportion_from_kit_collected. proportion tubes kit expecting returned stored BioStore? example, newborn babies may produce enough urine three 1.9mL tubes filled returned. maybe two returned. visit. time point child’s child’s mother’s life specimen collected. visit_logical_order. really useful , orders visit column logical order ECHO child’s life (sort ; due preconception protocol, gets complicated). specimen_type. specimen considered ECHO core, preconception, specialized specimen? important sites expected least try collect every core specimen, sites allowed collected specific specialized specimens. preconception specimens somewhere middle. y_2025. 1 (yes)/ 0 () column. specific specimen collected calendar year 2025? y_2026. y_2025, calendar year 2026. y_2027. y_2025, calendar year 2027. y_2028. y_2025, calendar year 2028. y_2029. y_2025, calendar year 2029. y_2030. y_2025, calendar year 2030. y_2025_proportion: set 0.25 ’s 25% calendar year 2025 left. y_2026_proportion: leave 1 unless ’s reason think specimens won’t collected 2026. y_2027_proportion: leave 1 unless ’s reason think specimens won’t collected 2027. y_2028_proportion: leave 1 unless ’s reason think specimens won’t collected 2028. y_2029_proportion: leave 1 unless ’s reason think specimens won’t collected 2029. y_2030_proportion: leave 1 unless ’s reason think specimens won’t collected 2030. specialized_obesity: biospecimen collected sites PI selected “obesity” outcome interest? specialized_obesity_proportion: proportion participants sites PI selected “obesity” outcome interest. specialized_chemphys: biospecimen collected sites PI selected “Chemical/Phyical” exposure interest? specialized_chemphys_proportion: proportion participants sites PI selected “Chemical/Physical” exposure interest. specialized_lifestyle biospecimen collected sites PI selected “Lifestyle” exposure interest? specialized_lifestyle_proportion: proportion participants sites PI selected “Lifestyle” exposure interest. notes: general notes data reference. Green checkmark ($\\color{green}{\\text{✓}}$ ) means data, yellow dot ($\\color{yellow}{\\text{◎}}$) means ’s speculative estimated data can kind guess , red x ($\\color{red}{\\text{✘}}$ ) means LAB CORE missing specific information exist.","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/capacityNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","title":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","text":"Get max capacity 1.0 1.9 ml tubes","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/capacityNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","text":"","code":"capacityNumbers(x = readKBExcel())"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/capacityNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","text":"x input data Karen Beeri BioStore capacity fullness","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/capacityNumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","text":"list MAXIMUM possible tubes size can go BioStore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/capacityNumbers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get max capacity for 1.0 and 1.9 ml tubes — capacityNumbers","text":"","code":"capacityNumbers() #> $tubes_1.0ml_max_capacity #> [1] 788256 #>  #> $tubes_1.9ml_max_capacity #> [1] 438840 #>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/find_full_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to find the date the freezer is full. Under development! — find_full_date","title":"Function to find the date the freezer is full. Under development! — find_full_date","text":"Function find date freezer full. development!","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/find_full_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to find the date the freezer is full. Under development! — find_full_date","text":"","code":"find_full_date(predictions, capacity, resultslm)"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/find_full_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to find the date the freezer is full. Under development! — find_full_date","text":"predictions predictions capacity capacity resultslm model","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/find_full_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to find the date the freezer is full. Under development! — find_full_date","text":"date freezer full. function development much yet","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/freezer_fullness_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a very simple plot to visually represent how full and empty freezer is at a given time — freezer_fullness_graph","title":"Make a very simple plot to visually represent how full and empty freezer is at a given time — freezer_fullness_graph","text":"Make simple plot visually represent full empty freezer given time","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/freezer_fullness_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a very simple plot to visually represent how full and empty freezer is at a given time — freezer_fullness_graph","text":"","code":"freezer_fullness_graph(used = NULL)"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/freezer_fullness_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a very simple plot to visually represent how full and empty freezer is at a given time — freezer_fullness_graph","text":"used Percent freezer currently occupied","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/freezer_fullness_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a very simple plot to visually represent how full and empty freezer is at a given time — freezer_fullness_graph","text":"ggplot2 plot","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/longifyReadHistorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Suchi's historical data ","title":"Make Suchi's historical data ","text":"Make Suchi's historical data \"long\" instead \"wide\"","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/longifyReadHistorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Suchi's historical data ","text":"","code":"longifyReadHistorical(   x = readHistorical(),   total_or_prop = \"total\",   add_pending = FALSE )"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/longifyReadHistorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Suchi's historical data ","text":"x \"Wide\" version historical data ECHO submissions BioStore total_or_prop \"total\" raw numbers \"prop\" proportion BioStore add_pending Add \"pending\" tubes sites yet?","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/longifyReadHistorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Suchi's historical data ","text":"\"Long\" version historical data ECHO submissions BioStore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/longifyReadHistorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Suchi's historical data ","text":"","code":"longifyReadHistorical() # cumulative totals as raw numbers #> # A tibble: 135 × 12 #>    Suchi_date date       Orders Containers total_submitted tubes_1.9_ml #>         <int> <date>      <int>      <int>           <int>        <int> #>  1   20241008 2024-10-08      1          7             432          240 #>  2   20241008 2024-10-08      1          7             432          240 #>  3   20241008 2024-10-08      1          7             432          240 #>  4   20241015 2024-10-15      1          2             192            0 #>  5   20241015 2024-10-15      1          2             192            0 #>  6   20241015 2024-10-15      1          2             192            0 #>  7   20241031 2024-10-31      2         30            1728         1152 #>  8   20241031 2024-10-31      2         30            1728         1152 #>  9   20241031 2024-10-31      2         30            1728         1152 #> 10   20241104 2024-11-04      3         30            2016          864 #> # ℹ 125 more rows #> # ℹ 6 more variables: tubes_1.0_ml <int>, proportion_1.0 <dbl>, #> #   proportion_1.9 <dbl>, proportion_total <dbl>, tube_type <chr>, total <int> longifyReadHistorical(total_or_prop = \"prop\") # cumulative total as a proportion of freezer capacity #> # A tibble: 135 × 12 #>    Suchi_date date       Orders Containers total_submitted tubes_1.9_ml #>         <int> <date>      <int>      <int>           <int>        <int> #>  1   20241008 2024-10-08      1          7             432          240 #>  2   20241008 2024-10-08      1          7             432          240 #>  3   20241008 2024-10-08      1          7             432          240 #>  4   20241015 2024-10-15      1          2             192            0 #>  5   20241015 2024-10-15      1          2             192            0 #>  6   20241015 2024-10-15      1          2             192            0 #>  7   20241031 2024-10-31      2         30            1728         1152 #>  8   20241031 2024-10-31      2         30            1728         1152 #>  9   20241031 2024-10-31      2         30            1728         1152 #> 10   20241104 2024-11-04      3         30            2016          864 #> # ℹ 125 more rows #> # ℹ 6 more variables: tubes_1.0_ml <int>, cumulative_1.0 <int>, #> #   cumulative_1.9 <int>, cumulative_total <int>, tube_type <chr>, total <dbl>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/pendingNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Pending numbers — pendingNumbers","title":"Pending numbers — pendingNumbers","text":"Pending numbers","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/pendingNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pending numbers — pendingNumbers","text":"","code":"pendingNumbers(x = readKBExcel())"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/pendingNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pending numbers — pendingNumbers","text":"x input data Suchi Karen Beeri tubes pending storage","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/pendingNumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pending numbers — pendingNumbers","text":"list pending tubes size slated go BioStore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/pendingNumbers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pending numbers — pendingNumbers","text":"","code":"pendingNumbers() #> $tubes_1.0ml_pending #> [1] 77674 #>  #> $tubes_1.9ml_pending #> [1] 88350 #>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readCollections.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in a file with current biospecimen collection protocol and timeline — readCollections","title":"Load in a file with current biospecimen collection protocol and timeline — readCollections","text":"Load file current biospecimen collection protocol timeline","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readCollections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in a file with current biospecimen collection protocol and timeline — readCollections","text":"","code":"readCollections(x = \"biospecimen_collection_for_biostore_calculations.xlsx\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readCollections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in a file with current biospecimen collection protocol and timeline — readCollections","text":"x File name","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readCollections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in a file with current biospecimen collection protocol and timeline — readCollections","text":"tibble biospecimen collection information","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readCollections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in a file with current biospecimen collection protocol and timeline — readCollections","text":"","code":"readCollections() #> # A tibble: 27 × 29 #>    collection_id   kit_type biospecimen_type participant tube_size tubes_per_kit #>    <chr>           <chr>    <chr>            <chr>       <chr>             <dbl> #>  1 breastmilk_1.9… breastm… breastmilk       maternal    1.9ml                 8 #>  2 breastmilk_1ml… breastm… breastmilk       maternal    1ml                  10 #>  3 cord_blood_1.9… cord_bl… cord_blood       child       1.9ml                 6 #>  4 cord_blood_1ml… cord_bl… cord_blood       child       1ml                  10 #>  5 placenta_1.9ml… placenta placenta         maternal    1.9ml                16 #>  6 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #>  7 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #>  8 urine_diaper_1… urine_d… urine            child       1.9ml                 3 #>  9 urine_cup_curr… urine_c… urine            partner     1.9ml                 3 #> 10 urine_cup_mate… urine_c… urine            maternal    1.9ml                 3 #> # ℹ 17 more rows #> # ℹ 23 more variables: proportion_from_kit_collected <dbl>, visit <chr>, #> #   visit_logical_order <dbl>, specimen_type <chr>, y_2025 <dbl>, y_2026 <dbl>, #> #   y_2027 <dbl>, y_2028 <dbl>, y_2029 <dbl>, y_2030 <dbl>, #> #   y_2025_proportion <dbl>, y_2026_proportion <dbl>, y_2027_proportion <dbl>, #> #   y_2028_proportion <dbl>, y_2029_proportion <dbl>, y_2030_proportion <dbl>, #> #   specialized_obesity <chr>, specialized_obesity_proportion <chr>, …"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readHistorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","title":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","text":"Read file Suchi historical data ECHO submissions BioStore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readHistorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","text":"","code":"readHistorical(x = \"suchi_bam_submissions.csv\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readHistorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","text":"x File name","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readHistorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","text":"tibble historical data ECHO submissions BioStore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readHistorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in file from Suchi with historical data on ECHO submissions to the BioStore — readHistorical","text":"","code":"readHistorical() #> # A tibble: 45 × 13 #>    Suchi_date date       Orders Containers total_submitted tubes_1.9_ml #>         <int> <date>      <int>      <int>           <int>        <int> #>  1   20241008 2024-10-08      1          7             432          240 #>  2   20241015 2024-10-15      1          2             192            0 #>  3   20241031 2024-10-31      2         30            1728         1152 #>  4   20241104 2024-11-04      3         30            2016          864 #>  5   20241105 2024-11-05      4         60            3695         2063 #>  6   20241113 2024-11-13      4         60            3503         2255 #>  7   20241114 2024-11-14      2         28            1260         1179 #>  8   20241118 2024-11-18      9        135            8544         4416 #>  9   20241120 2024-11-20      5         72            4560         2352 #> 10   20241121 2024-11-21      8        112            7293         3456 #> # ℹ 35 more rows #> # ℹ 7 more variables: tubes_1.0_ml <int>, cumulative_1.0 <int>, #> #   cumulative_1.9 <int>, cumulative_total <int>, proportion_1.0 <dbl>, #> #   proportion_1.9 <dbl>, proportion_total <dbl>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readKBExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","title":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","text":"Load BioStore capacity Excel file Karen Beeri","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readKBExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","text":"","code":"readKBExcel(x = \"calculator_for_Suman.xlsx\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readKBExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","text":"x Exact name file","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readKBExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","text":"clean tibble Excel file manipulation","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/readKBExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in BioStore capacity Excel file from Karen Beeri — readKBExcel","text":"","code":"readKBExcel() #> # A tibble: 3 × 8 #>   x2d_tubes_ml            tube_capacity_one_bank current_9_2_2025 percent_bank #>   <chr>                                    <dbl>            <dbl>        <dbl> #> 1 fluid_x_1_0m_l_tube                     788256           118738        0.151 #> 2 x1_9m_l_capped_vial                     438840           124342        0.283 #> 3 total_elvis_utelization                     NA           243080        0.434 #> # ℹ 4 more variables: pending_per_suchi <dbl>, percent_bank_2 <dbl>, #> #   number_of_samples_stored_and_pening <dbl>, percent_bank_3 <dbl>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/single_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Code is all Eric Koplin! — single_arima","title":"Code is all Eric Koplin! — single_arima","text":"Code Eric Koplin!","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/single_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code is all Eric Koplin! — single_arima","text":"","code":"single_arima()"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/single_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code is all Eric Koplin! — single_arima","text":"arima","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/single_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code is all Eric Koplin! — single_arima","text":"","code":"single_arima()"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/siteCollectionsPre.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse file of site collections from Bio-Track — siteCollectionsPre","title":"Parse file of site collections from Bio-Track — siteCollectionsPre","text":"Parse file site collections Bio-Track","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/siteCollectionsPre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse file of site collections from Bio-Track — siteCollectionsPre","text":"","code":"siteCollectionsPre(x = \"site_report_2025_09_12_07_43_04.json\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/siteCollectionsPre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse file of site collections from Bio-Track — siteCollectionsPre","text":"x JSON file Bio-Track","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/siteCollectionsPre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse file of site collections from Bio-Track — siteCollectionsPre","text":"tibble collections sites go biostore","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/site_collections.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in de-identified information about site biospecimen collections — site_collections","title":"Load in de-identified information about site biospecimen collections — site_collections","text":"Load de-identified information site biospecimen collections","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/site_collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in de-identified information about site biospecimen collections — site_collections","text":"","code":"site_collections(x = \"deidentified_specimen_collection.csv\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/site_collections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in de-identified information about site biospecimen collections — site_collections","text":"x file name deidentified biospecimen collections file","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/site_collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in de-identified information about site biospecimen collections — site_collections","text":"tibble information","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/site_collections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in de-identified information about site biospecimen collections — site_collections","text":"","code":"site_collections() #> # A tibble: 204,017 × 16 #>    site_id_randomized               number_of_containers container_type capacity #>    <chr>                                           <int> <chr>             <int> #>  1 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  2 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  3 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  4 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  5 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  6 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  7 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  8 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #>  9 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #> 10 2f65c9a05b770edb650f839c06514908                  119 [FH prefixed]…       48 #> # ℹ 204,007 more rows #> # ℹ 12 more variables: number_of_specimen <int>, specimen_type <chr>, #> #   sample_type <chr>, storage_date <chr>, nominal_volume <chr>, #> #   partial_aliquot <lgl>, partial_volume <dbl>, tube_size <chr>, #> #   specialized_whole_blood <int>, specialized_breast_milk <int>, #> #   specialized_urine <int>, shipped <int>"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/totalBioStoreCapacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total BioStore capacity — totalBioStoreCapacity","title":"Calculate total BioStore capacity — totalBioStoreCapacity","text":"Calculate total BioStore capacity","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/totalBioStoreCapacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total BioStore capacity — totalBioStoreCapacity","text":"","code":"totalBioStoreCapacity(x = NULL, y = NULL)"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/totalBioStoreCapacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total BioStore capacity — totalBioStoreCapacity","text":"x number 1.0 ml tubes added storage y number 1.9 ml tubes added storage","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/totalBioStoreCapacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total BioStore capacity — totalBioStoreCapacity","text":"nothing yet","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/totalBioStoreCapacity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total BioStore capacity — totalBioStoreCapacity","text":"","code":"totalBioStoreCapacity(x = 100, y = 100) # function doesn't do anything yet"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/zoo_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","title":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","text":"Create zoo ts object historical data https://cran.r-project.org/web/packages/zoo/index.html","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/zoo_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","text":"","code":"zoo_ts(x = readHistorical(), tube = \"cumulative_1.0\")"},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/zoo_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","text":"x Historical data tube tube size, whether cumulative . Options \"tubes_1.0_ml\", \"tubes_1.9_ml\", \"cumulative_1.0\" \"cumulative_1.9\"","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/zoo_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","text":"zoo ts object","code":""},{"path":"https://mshilts1.github.io/biostoreCapacity/reference/zoo_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a zoo ts object from historical data https://cran.r-project.org/web/packages/zoo/index.html — zoo_ts","text":"","code":"zoo_ts() #> 2024-10-08 2024-10-15 2024-10-31 2024-11-04 2024-11-05 2024-11-13 2024-11-14  #>        192        384        960       2112       3744       4992       5073  #> 2024-11-18 2024-11-20 2024-11-21 2024-12-16 2024-12-17 2025-01-14 2025-01-16  #>       9201      11409      15246      18702      21402      21402      28871  #> 2025-01-30 2025-01-31 2025-02-03 2025-02-05 2025-02-06 2025-02-07 2025-02-10  #>      32135      34151      37511      40391      44615      47559      52248  #> 2025-02-12 2025-02-13 2025-02-24 2025-02-27 2025-03-03 2025-03-17 2025-03-19  #>      56568      60383      62303      66239      68733      70365      72861  #> 2025-03-20 2025-03-24 2025-03-26 2025-03-27 2025-04-07 2025-04-09 2025-04-10  #>      75549      78465      80899      83587      85123      88097      93467  #> 2025-04-30 2025-05-01 2025-05-08 2025-05-14 2025-05-21 2025-05-28 2025-06-04  #>      94715      98362     100666     105082     110362     111322     113146  #> 2025-06-16 2025-06-25 2025-07-09  #>     115286     117014     118438"}]
